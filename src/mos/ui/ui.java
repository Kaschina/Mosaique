/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package mos.ui;

import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;

import mos.img.calc.MyBufferedImage;
import mos.img.calc.Painter;
import mos.img.calc.TileCalculator;

import java.io.File;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;

/**
 * 
 * @author melanie
 */
public class ui extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private BufferedImage picture;

	/**
	 * Creates new form ui
	 */
	public ui() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jTextField1 = new javax.swing.JTextField();
		pathMosField = new javax.swing.JTextField();
		pathPicField = new javax.swing.JTextField();
		picturePanel = new javax.swing.JPanel();
		pictureLabel = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jSlider1 = new javax.swing.JSlider(0, 400);

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setText("Anzahl Threads");
		jLabel2.setText("Mosaiksource");
		jLabel3.setText("Picture");
		jLabel4.setText("Tilesize");

		jTextField1.setText("1");
		jTextField1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField1ActionPerformed(evt);
			}
		});

		pathMosField.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				pathMosFieldMouseClicked(evt);
			}
		});
		pathMosField.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pathMosFieldActionPerformed(evt);
			}
		});

		pathPicField.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				pathPicFieldMouseClicked(evt);
			}
		});

		picturePanel.setMaximumSize(new java.awt.Dimension(400, 400));

		javax.swing.GroupLayout picturePanelLayout = new javax.swing.GroupLayout(
				picturePanel);
		picturePanel.setLayout(picturePanelLayout);
		picturePanelLayout.setHorizontalGroup(picturePanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						picturePanelLayout.createSequentialGroup()
								.addComponent(pictureLabel)
								.addGap(0, 390, Short.MAX_VALUE)));
		picturePanelLayout.setVerticalGroup(picturePanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						picturePanelLayout
								.createSequentialGroup()
								.addComponent(pictureLabel,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										48, Short.MAX_VALUE)
								.addGap(352, 352, 352)));

		jSlider1.setMajorTickSpacing(100);
		jSlider1.createStandardLabels(200);
		jSlider1.setPaintTicks(true);
		jSlider1.setPaintLabels(true);
		jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				jSlider1StateChanged(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(picturePanel,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(
																		jLabel1)
																.addComponent(
																		jLabel2,
																		javax.swing.GroupLayout.Alignment.TRAILING)
																.addComponent(
																		jLabel3,
																		javax.swing.GroupLayout.Alignment.TRAILING))
												.addComponent(jLabel4))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING,
												false)
												.addComponent(
														pathPicField,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														211, Short.MAX_VALUE)
												.addComponent(
														pathMosField,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														211, Short.MAX_VALUE)
												.addComponent(
														jTextField1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														97,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jSlider1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(77, 77, 77)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														jLabel1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														28,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jTextField1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														jLabel2,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														28,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														pathMosField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														jLabel3,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														26,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														pathPicField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabel4)
												.addComponent(
														jSlider1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE))
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap(20, Short.MAX_VALUE)
								.addComponent(picturePanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(20, 20, 20)));
		okButton = new JButton("Mosaik erzeugen");
		okButton.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				okButtonMouseClicked(evt);
			}
		});
		pack();
	}

	private void okButtonMouseClicked(MouseEvent evt) {
		
	}
	private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField1ActionPerformed
		// TODO add your handling code here:
	}

	private void pathMosFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pathMosFieldActionPerformed
		// TODO add your handling code here:
	}

	private void pathMosFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_pathMosFieldMouseClicked
		// Get the directory that contains mosaicpictures
		String path = getPath(true);
		pathMosField.setText(path);
	}

	private void pathPicFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_pathPicFieldMouseClicked
		// get the picture that will be mosaiqued
		String path = getPath(false);
		pathPicField.setText(path);
		try {
			MyBufferedImage img = new MyBufferedImage(path);
			picture = img.getResizedImage(400, img.getType());

			pictureLabel.setIcon(new ImageIcon(picture));
		} catch (Exception e) {
			picturePanel.add(new JLabel("Picture cannot be shown!"));
		}
	}// GEN-LAST:event_pathPicFieldMouseClicked

	private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jSlider1StateChanged
		try {
			Thread.sleep(30);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		if (picture == null) {
			picture = new BufferedImage(400, 400, 1);
		}
		/**
		 * add grid to image. get correct tilesize.
		 */
		int sliderValue = jSlider1.getValue();
		if (sliderValue >= 20) {
			int tileSize = new TileCalculator(picture.getHeight(),
					picture.getWidth()).getOptSize(jSlider1.getValue());
			Painter painter = new Painter(picture, tileSize);
			BufferedImage gridded = painter.paintGrid();
			pictureLabel.setIcon(new ImageIcon(gridded));
		}

	}

	/**
	 * get the path from filechooser
	 * 
	 * @param directory
	 *            want a directory? if false: want a file
	 * @return
	 */
	private String getPath(boolean directory) {
		JPanel panel = new JPanel();
		JFileChooser chooser = new JFileChooser();
		panel.add(chooser);
		setVisible(true);
		if (directory) {
			chooser.setDialogTitle("Select Directory");
			chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		} else {
			chooser.setFileFilter(new MyFilter(endings));
			chooser.setDialogTitle("Select Picture");
		}

		chooser.showOpenDialog(null);
		return chooser.getSelectedFile().getAbsolutePath();
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ui.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ui.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ui.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ui.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ui().setVisible(true);
			}
		});
	}

	class MyFilter extends FileFilter {
		private final String[] endings;

		public MyFilter(String[] endings) {
			this.endings = endings;
		}

		@Override
		public boolean accept(File f) {
			if (f == null)
				return false;
			if (f.isDirectory())
				return true;
			// true, wenn File gewuenschte Endung besitzt
			for (String ending : endings) {
				if (f.getName().toLowerCase().endsWith(ending))
					return true;
			}
			return false;
		}

		@Override
		public String getDescription() {
			String description = "";
			for (String ending : endings) {
				description += ending + " ";
			}
			return description + " only";
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JSlider jSlider1;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JTextField pathMosField;
	private javax.swing.JTextField pathPicField;
	private javax.swing.JLabel pictureLabel;
	private javax.swing.JPanel picturePanel;
	private javax.swing.JButton okButton;
	private final String[] endings = { "jpg", "img", "png" };
}
